Build a full-stack web application for a Secure Password Utility Suite with an elegant, professional, and modern design. The app should have a purple-themed UI with cool animations, hover transitions, and cursor interactions (such as button highlight on hover). The frontend must be visually stunning yet user-friendly, with responsive design and smooth UX transitions.

The web app should include the following core features:

1. Password Strength Checker
Analyze password strength based on length, character variety (uppercase, lowercase, numbers, symbols), entropy, and complexity.

Flag common weak patterns like "123456" or "qwerty".

Integrate with the Have I Been Pwned API to detect data breaches.

Show color-coded feedback, score out of 10, emoji indicators, and suggestions for stronger passwords.

2. Password Generator
Generate random strong passwords.

Custom options: length, character types (upper, lower, digits, symbols), and exclude ambiguous characters.

Display password entropy and estimated crack time.

3. Password Manager (Vault)
Users can store credentials securely (site, username, password, notes).

Vault must be encrypted using AES.

Require a master password (securely handled).

Features: add/edit/delete/search credentials, category tags (banking, social, etc.), copy to clipboard.

4. Cryptographic Tools
Provide text encryption/decryption (AES, Fernet).

Support for hashing algorithms (SHA-256, SHA-512, bcrypt).

Compare hashes and generate cryptographic keys.

5. Import/Export Options
Export vault in encrypted JSON or custom format.

Import from CSV or JSON.

Include backup/restore with validation.

6. Two-Factor Authentication (2FA)
Enable 2FA for vault access.

Support TOTP with QR code generation (Google Authenticator, Authy).

Option for email verification via Gmail SMTP (send a 6-digit OTP).

7. Password Sharing
Allow secure password sharing (encrypt before sharing).

Time-limited access or expiry option.

Option to send decryption password separately.

8. Password Aging and Expiry
Track creation and last-used date of passwords.

Allow users to set password rotation policies (e.g., every 90 days).

Notify or highlight expired/weak passwords.

9. Password Health Dashboard
Show password strength overview.

Suggest actions (update weak/expired credentials).

Visual indicators using charts or graphs.